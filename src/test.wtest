
import clientes.*
import remiseras.*

test "viaje con remisera Roxana a una distancia de 10 kilómetros"{
    assert.equals(180, roxana.precioViaje(ludmila, 10))
    assert.equals(300, roxana.precioViaje(anaMaria, 10))
    assert.equals(220, roxana.precioViaje(teresa, 10))

}


test "viaje con remisera Gabriela a una distancia de 10 kilómetros"{
    assert.equals(216, gabriela.precioViaje(ludmila, 10))
    assert.equals(360, gabriela.precioViaje(anaMaria, 10))
    assert.equals(264, gabriela.precioViaje(teresa, 10))
}

test "viaje con remisera Mariela a una distancia de 10 kilómetros"{
    assert.equals(180, mariela.precioViaje(ludmila, 10))
    assert.equals(300, mariela.precioViaje(anaMaria, 10))
    assert.equals(220, mariela.precioViaje(teresa, 10))
}

test "viaje con remisera Juana a una distancia de 10 kilómetros"{
    assert.equals(200, juana.precioViaje(ludmila, 10))
    assert.equals(200, juana.precioViaje(anaMaria, 10))
    assert.equals(200, juana.precioViaje(teresa, 10))
}


test "viaje con remisera Roxana a una distancia de 2 kilómetros"{
    assert.equals(36, roxana.precioViaje(ludmila, 2))
    assert.equals(60, roxana.precioViaje(anaMaria, 2))
    assert.equals(44, roxana.precioViaje(teresa, 2))

}

test "viaje con remisera Gabriela a una distancia de 2 kilómetros"{
    assert.equals(43.20, gabriela.precioViaje(ludmila, 2))
    assert.equals(72, gabriela.precioViaje(anaMaria, 2))
    assert.equals(52.80, gabriela.precioViaje(teresa, 2))
}

test "viaje con remisera Mariela a una distancia de 2 kilómetros"{
    assert.equals(50, mariela.precioViaje(ludmila, 2))
    assert.equals(60, mariela.precioViaje(anaMaria, 2))
    assert.equals(50, mariela.precioViaje(teresa, 2))
}

test "viaje con remisera Juana a una distancia de 2 kilómetros"{
    assert.equals(100, juana.precioViaje(ludmila, 2))
    assert.equals(100, juana.precioViaje(anaMaria, 2))
    assert.equals(100, juana.precioViaje(teresa, 2))
}

test "Lucía está reemplazando a Mariela, y Melina está trabajando para Ludmila por un viaje de 10 kilometros"{
	lucia.estaReemplazando(mariela)
	melina.trabajaPara(ludmila)	
	assert.equals(150,lucia.precioViaje(melina, 10))
}

test "Lucía está reemplazando a Mariela, y Melina está trabajando para Ludmila por un viaje de 1 kilometros"{
	lucia.estaReemplazando(mariela)
	melina.trabajaPara(ludmila)	
	assert.equals(50,lucia.precioViaje(melina, 1))
}

test "Lucía esta reemplazando a Gabriela y Melina está trabajando para Ludmila por un viaje de 10 kilometros"{
	lucia.estaReemplazando(gabriela)
	melina.trabajaPara(ludmila)	
	assert.equals(180,lucia.precioViaje(melina, 10))
}

test "Lucía esta reemplazando a Gabriela y Melina está trabajando para Ludmila por un viaje de 1 kilometros"{
	lucia.estaReemplazando(gabriela)
	melina.trabajaPara(ludmila)	
	assert.equals(18,lucia.precioViaje(melina, 1))
}
